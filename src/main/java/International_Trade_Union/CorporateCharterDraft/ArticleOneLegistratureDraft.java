package International_Trade_Union.CorporateCharterDraft;
/**устарел(недействителен), является черновиком, но его хеш используется в генезис блоке.
 Но с помощью новых законов можно добавить те части которые будут интересны и сделать их действительным законом, если
 данные части не противоречат действующему уставу и действующим законам.
 */
public interface ArticleOneLegistratureDraft {

//совета ди
    String SECTION_1 = "Все предоставленные здесь законодательные полномочия принадлежат Корпорации " +
            " Международного Торгового Союза, который Состоит из Совета Акционеров и HigherSpecialPositions и всех остальных членов" +
            " которые имеют право голосовать в соответсвтвии с данным Уставом." +
            " Все законы создаются через механизм криптовалюты Корпорации Международного Торгового Союза, в соответсвии описаными здесь " +
            " правилами." +
            " Все полномочия предоставленные данным Уставом, а также действующими законами которые не протироворечат данному уставу " +
            " являются легитимными. " +
            "Единственым преимуществом совета директоров, перед остальными участниками данной системы и ее" +
            "граждан, является только тот факт, что они обладают на 10% больше голосов. А также право вводит поправки " +
            "как описано в данном уставе";

    String CHAPTER_2 = " Совет Акционеров состоит из одной тысячи счетов(1000)," +
            " счетов с наибольшим количеством цифровых акций digitalStockBalance." +
            "Но отбирается этот список из всех счетов которые хотя бы один раз были активными тоесть  отправителями или майнерами в течение" +
            "одного года (текущий год - один год, и если активность была внутри данного диапазона.), но" +
            "если прошло больше года с последней активности, то данный счет не учитывается при отборе" +
            "совета Акционеров. Это нужно чтобы если вдруг был утерян счет, то это не влияло на систему, так как будут учитываться " +
            "только активные участники и только активные участники могут быть Акционерами. " +
        " Перерасчет членов Совета акционеров происходит каждый блок и определяется каждый блок." +
        "  при голосовании через механизм даной криптовалюты их голоса(цифровые акции) умножается на множитель 1.10 " +
            " что дает им на десять процентов больше " +
            " голоса при созаднии закона в рамках данной " +
            " криптовалюты (при голосовании через механизм данной криптовалюты)" +
        " Абсолютно любое лицо (Юридическое, Физическое, Цифровое Лицо-Исккуственный Интелект и т.д.) " +
            " может быть членом Совета Акционеров (не зависимо от граждансва, национальности, пола и т.д. или любых " +
        "других признаков) или даже любое государство может выступать в качестве члена Совета Акционеров." +
            "" +
            "Алгоритм Избрания Совета ационеров:" +
            " //определение совета акционеров\n" +
            "    public static List<Account> findBoardOfShareholders(Map<String, Account> balances, List<Block> blocks, int limit) {\n" +
            "        List<Block> minersHaveMoreStock = null;\n" +
            "        if(blocks.size() > limit){\n" +
            "            minersHaveMoreStock = blocks.subList(blocks.size() - limit, blocks.size());\n" +
            "        }\n" +
            "        else {\n" +
            "            minersHaveMoreStock = blocks;\n" +
            "        }\n" +
            "        List<Account> boardAccounts = minersHaveMoreStock.stream().map(\n" +
            "                t->new Account(t.getMinerAddress(), 0, 0))\n" +
            "                .collect(Collectors.toList());\n" +
            "\n" +
            "        for (Block block : minersHaveMoreStock) {\n" +
            "            for (DtoTransaction dtoTransaction : block.getDtoTransactions()) {\n" +
            "                boardAccounts.add(new Account(dtoTransaction.getSender(), 0, 0));\n" +
            "            }\n" +
            "        }\n" +

            "        CompareObject compareObject = new CompareObject();\n" +
            "        List<Account> boardOfShareholders = balances.entrySet().stream()\n" +
            "                .filter(t->boardAccounts.contains(t.getValue()))\n" +
            "                .map(t -> t.getValue()).collect(Collectors.toList());\n" +
            "                boardOfShareholders = boardOfShareholders\n" +
            "                .stream()\n" +
            "                .filter(t -> !t.getAccount().startsWith(Seting.NAME_LAW_ADDRESS_START))\n" +
            "                .filter(t -> t.getDigitalStockBalance() > 0)\n" +
            "                .sorted((f1, f2) -> {return compareObject.compare(f1, f2);})\n" +
            "                .limit(Seting.BOARD_OF_SHAREHOLDERS)\n" +
            "                .collect(Collectors.toList());\n" +
            "        return boardOfShareholders;\n" +
            "    }" +
            "" +
            "в BoardOfShareholdersController происходит сортировка по убыванию" +
            "  //сортировка по убыванию\n" +
            "        boardOfShareholders = boardOfShareholders.stream().sorted((f1, f2)\n" +
            "                -> Double.compare(f2.getDigitalStockBalance(), f1.getDigitalStockBalance())).collect(Collectors.toList());\n";

    String CHAPTER_3 = "Создавать законы через механизм данной криптовалюты имеет право любой счет в криптовалюте Корпорации Международный Торговый Союз." +
            " Стоимость создания закона " +
            " сто сорок четыре цифровых доллара(144) в качестве вознаграждения майнеру( стоимость может быть уменьшена через действующий закон)." +
            " Закон созданный через механизм данной криптовалюты " +
            " является дейтсвующим пока за " +
            " него проголосовало  " +
            " пять миллионов сто восемдесят четыре тысячи голосов и более. Механизм голосования такой: Голоса проголосовавшие ЗА минус голоса проголосовавшие" +
            " ПРОТИВ и " +
            " остаток должен быть больше 5184000. Даная мера предназначена чтобы не" +
            "терялись голоса против (Пример: если брать класический механизм голосования акциями," +
            "то если у одного участника есть 51%, то не будет учитываться оставшиеся 49% голосов." +
            "так как не зависимо как проголосуют оставшиеся, это не сыграет роли. Но в данной" +
            "системе отнимая от ЗА - ПРОТИВ > ПОРОГА, мы получаем ситуацию когда каждый голос " +
            "важен.). Для обычных счетов количество голосов равно количеству цифровых акций на данный момент, " +
            " для членов Совета Акционеров " +
            " Количество голосов равно количеству цифровых акций на данный момент, умноженной на множитель одна целая и десять сотых" +
            " процента (1.10)." +
            " Что дает членам Совета Акционеров 10% больше голосов чем у них есть цифровых акций. " +
            " Каждый блок идет перерасчет всех голосов проголосовавших за и против. Пока количество голосов больше 5184000 закон является " +
            " действительным. ";

    String CHAPTER_4 = " Право создавать законы через механизм данной криптовалюты, " +
            "  а также право голосовать за законы через механизм данной криптовалюты имеют все юридические и физические лица обладающие " +
            " счетом в данной криптовалюте и удовлетворяющие условиям создания и голосования в " +
            " данной криптовалюте Корпорации Международного Торгового Союза." +
            "Учитываются только те голоса, от которых не прошло больше трех лет для законов и не больше трех лет для HigherSpecialPositions," +
            " но можно переголосовать заного чтобы " +
            "обновит голос. Данная мера нужна для безопастности системы, если вдруг счет был утерян то, этот голос не будет действовать вечно," +
            "а только определенный периуд времени." +
            "также это позволяет переизберать важные должностные лица и бороться с лобированием вредных законов, так как плохие законы" +
            "не переизберуться. ";

    String CHAPTER_5 = "HigherSpecialPositions данные специальные должности являются высшемыми должностями. Все должности " +
            " описанные в данном" +
            " Уставе яляются действительными. (CORPORATE_SUPREME_COURT(18), DEPARTMENT_OF_CORPORATE_JOURNALISTS(15)," +
            " BOARD_OF_DIRECTORS(16), MARKETING_DEPARTMENT(5), DEPARTMENT_OF_STRATEGIC_DEVELOPMENT_AND_PLANNING(5), PR_DEPARTMENT(5)," +
            " DEPARTMENT_OF_FINANCE(5),DEPARTMENT_OF_HUMAN_RESOURCES(5))." +
            " Чтобы создать новые специальные высшие должности нужно " +
            " создать закон с новым названием должности, определить сколько мест руководства будет создано для данной должности." +
            " А также определить ее полномочия. Данная должность и все ее полномочия будут действительными." +
             "пока действует закон который создал данную должность. " +
            "В  случае если закон о должности стал не действительным " +
            ", то данная должность теряет все свои полномочия. Если снова этот закон не будет возобновлен или создан аналогичный действующий закон" +
            " для отменненой должности. Должности Которые описаны в уставе являются всегда действующими, но их полномочия могут" +
            "менятся в зависимости от действующих законов, которые описывают данные должности" +
            "Как принят закон который создает новую должность и не отменен в течение четырех недель с момента принятия, " +
            "Все майнеры должны добавить даную должность в HigherSpecialPositions." +
            " ";

    String CHAPTER_6 =
            " Чтобы занять Специальную должность HigherSpecialPositions нужно создать закон с названием пакета который " +
                    " совпадает с названием действующей должности. В качестве первой строки закона должен быть вписан адресс отправителя(создателя) " +
                    "данного закона. Адресс создателя должен совпадать с адрессом который вписан в данном законе." +
                    " Вторая строка может быть заполнена контактными данными или полезной информацией о том кто подает на " +
                    " данную должность. Счет в вступает в должность как только данный пакет закона будет одобрен с теми " +
                    "же условиями как для всех законов в данной криптовалюте и он будет находиться в должности, пока " +
                    "его пакет по подаче на данную должность будет действующим.";



    String CHAPTER_7 = " В случае нескольких действующих законов которые противоречать друг другу " +
            ", Верховный судьи (назначенные через криптовалюту CORPORATE_SUPREME_COURT)" +
            " должен одавать приоритет тем законам, " +
            " которые на момент судебного процесса имеет наибольшее количество голосов, превосходящее в 5% " +
            " от противоречающих голосов, но если " +
             " нет такого превосходства то данный вопрос должен быть решен либо с помощью прецендента, которы й" +
            " будет действовать пока не пройзодет изменение в количестве голосов или пока верховные судьи которые создали прецендент " +
            " находятся на своих должностях." +

            " Прецендент создается голосованием верховных судей которые большинством голосов определяют что в случае " +
            " пока несколько противоречащих законов действуют и нет превосходства в голосах в 5%, то суд принимает что тот " +
             " или иной закон будет более высшим, над другим пока будет сохраняться паритет в голосах за закон и пока судьи " +
            " которые проголосовали за данный закон как действующий и более высший, из противоречащих но принятых через механизм " +
            " данной криптовалюты. В случае если если состав судей изменился, те которые голосовали за закон, то если сохраняется " +
            " паритет противоречащих законов, нужно заного принять с помощью прецендента который из них более высший над другими " +
            " противоречащими." ;

    String CHAPTER_8 = " Для создания закона через механизм криптовалюты Корпорации Международого торгового Союза " +
            " Нужно внутри данной криптовалюты Создать объект класса Laws где packetLawName- является названием пакета законов." +
            " List<String> laws - является списком законов, String hashLaw - является адрессом данного пакета законов и начинается с LIBER." +
            " Чтобы Закон попал в пул законов нужно создать транзакцию где получателем является hashLaw данного закона и вознаграждение " +
            " майнера равно сто сорок четыре цифровых долара данной криптовалюты. После этого как закон попадет в блок, он окажется в пуле " +
            " законов и за него можно будет голосовать.";

    String CHAPTER_9 = "при отправке \"digitalStockBalance\" на любой баланс, с VoteEnum.NO" +
            " сокращяет баланс получателя на то количество которое отправил отправитель," +
            " Данная опереция нужна чтобы иметь возможность снизить голоса деструктивных членов Корпорации Международного Торгового Союза" +
            " а также чтобы убрать конкретный счет c Совета Акционеров.," +
            " или сократить политическую власть конкретного счета,\n" +
            "\n" +
            "при отправке \"digitalStockBalance\" на любой баланс, с VoteEnum.YES\n" +
            "увеличивает баланс получателя на то количество которое отправил отправитель," +
            " Данная опереция нужна " +
            "  чтобы добавить конкретный счет в Совет Акционеров, или увеличить " +
            "политическую власть конкретного счета.";

    String CHAPTER_10 = "все лица могут занимать специальные высшие должности." +
            " HigherSpecialPositions." +
            " Примерный код работы описан в GovernmentController." +
            " Каждая Специальная должность имеет ограничение в количестве." +
            " Один счет может занять одно место в пуле одной должноти, но " +
            " один счет может занимать несколько должностей если они разные и имеют разные полномочия." +
            " (Пример: CORPORATE_SUPREME_COURT(18),BOARD_OF_DIRECTORS(16) один и тот же счет может занимать по одной" +
            " должности в каждой такой группе, но счет не может занять к примеру более двух мест в должности BOARD_OF_DIRECTORS" +
            " или иной специальной должности)." +
            "Требование к должности такие как к действующим законом, но есть отличие, примерный алгоритм описан здесь:" +
            "1.создается список всех балансов." +
            "2. создать список всех законов." +
            "3. создать списки с названием HigherSpecialPositions." +
            "ДАННЫЙ КОД МОЖНО УЛУЧШАТЬ ЕСЛИ СОХРАНЯТЬ ДЕЙСТВУЮЩИЕ ПРИНЦИПЫ, НО УЛУЧШЕНИЕ ДОЛЖНО БЫТЬ " +
            "СНАЧАЛА СОЗДАННО ВВИДЕ ДЕЙСТВУЮЩЕГО ЗАКОНА, ГДЕ УКАЗЫВАЕТСЯ КАКОЙ КОД И КАК БУДЕТ ДЕЙСТВОВАТЬ ДАННЫЙ КОД " +
            " //отбирает позицию вакансий\n" +
            "  //отбирает позицию вакансий\n" +
            "  class UtilsLaws  public static List<LawEligibleForParliamentaryApproval> getPossions(List<LawEligibleForParliamentaryApproval> lawEligibleForParliamentaryApprovals, HigherSpecialPositions corporateSeniorPositions){\n" +
            "\n" +
            "        List<LawEligibleForParliamentaryApproval> temporary = new ArrayList<>();\n" +
            "        temporary = lawEligibleForParliamentaryApprovals.stream()\n" +
            "                .filter(t->Objects.nonNull(t))\n" +
            "                .filter(t->Objects.nonNull(t.getLaws()))\n" +
            "                .filter(t->Objects.nonNull(t.getLaws().getLaws()))\n" +
            "                .filter(t->Objects.nonNull(t.getLaws().getPacketLawName()))\n" +
            "                .filter(t->Objects.nonNull(t.getName()))\n" +
            "                .filter(t->Objects.nonNull(t.getLaws().getHashLaw()))\n" +
            "                .sorted((f1, f2) -> Double.compare(f2.getAccount().getDigitalStockBalance(), f1.getAccount().getDigitalStockBalance()))\n" +
            "                .filter(t-> t.getLaws().getPacketLawName().equals(corporateSeniorPositions.name()))\n" +
            "                .limit(corporateSeniorPositions.getCount())\n" +
            "                .collect(Collectors.toList());\n" +
            "        return temporary;\n" +
            "\n" +
            "    }" +
            "," +
            "4. Получить список акционеров." +
            "5. Удостовериться пакет-закон который действует как должность является действуюм, таким же способом как и обычные законы." +
            "6. Дальше отсортировать каждый действующий должность закон по убыванию, и из них отобрать с наибольшим количеством" +
            "голосов равное количествую на данную должность." +
            " //отобрать голоса выше лимита\n" +
            "            curentLawVotesEndBalance.put(corp.getKey(), curentLawVotesEndBalance.get(corp.getKey())\n" +
            "                    .stream().filter(t-> t.getVotes() >= Seting.ORIGINAL_LIMIT_MIN_VOTE)\n" +
            "                    .collect(Collectors.toList()));\n" +
            "\n" +
            " //отобрать то количество которое соответсвтвует данной должности\n" +
            "            List<CurrentLawVotesEndBalance> temporary = curentLawVotesEndBalance.get(corp.getKey()).stream().filter(\n" +
            "                            t->!t.getPackageName().equals(corp.getKey()))\n" +
            "                    .sorted(Comparator.comparing(CurrentLawVotesEndBalance::getVotes).reversed())\n" +
            "                    .limit(corp.getKey().getCount()).collect(Collectors.toList());\n" +
            "\n" +
            "           curentLawVotesEndBalance.put(corp.getKey(), temporary);" +
            "" +
            "Любое лицо может голосовать за участников претендующих на  должности, но подать за должность может каждый счет только за себя" +
            "при подаче себя на данную должность счет создает закон и первая строка закона совпадает с счетом отправителя." +
            "как только закон попадает в список, каждый может голосовать за данный закон, который утверждает счет указанный " +
            "там на данную должность. Действующие должности отбираются таким образом:" +
            "GovernmentController corporateSeniorpositions" +
            " Blockchain blockchain = Mining.getBlockchain(\n" +
            "                Seting.ORIGINAL_BLOCKCHAIN_FILE,\n" +
            "                BlockchainFactoryEnum.ORIGINAL);\n" +
            "\n" +
            "        //Получение баланса\n" +
            "        Map<String, Account> balances = new HashMap<>();\n" +
            "\n" +
            "        balances = SaveBalances.readLineObject(Seting.ORIGINAL_BALANCE_FILE);\n" +
            "\n" +
            "        //Нахождение должности\n" +
            "        List<LawEligibleForParliamentaryApproval> allGovernment =\n" +
            "                UtilsLaws.readLineCurrentLaws(Seting.ORIGINAL_ALL_CORPORATION_LAWS_WITH_BALANCE_FILE);\n" +
            "\n" +
            "        //список должностей\n" +
            "        Map<HigherSpecialPositions, List<LawEligibleForParliamentaryApproval>> positionsListMap = new HashMap<>();\n" +
            "        //добавление всех должностей\n" +
            "        for (HigherSpecialPositions corporateSeniorPositions : HigherSpecialPositions.values()) {\n" +
            "            positionsListMap.put(corporateSeniorPositions, UtilsLaws.getPossions(allGovernment, corporateSeniorPositions));\n" +
            "        }\n" +
            "\n" +
            "\n" +
            "        //список акционеров\n" +
            "        List<Account> BoardOfShareholders  = UtilsGovernment.findBoardOfShareholders(balances, blockchain.getBlockchainList(), Seting.BOARDS_BLOCK);\n" +
            "\n" +
            "        //константа список акционеров\n" +
            "        List<Account> finalBoardOfShareholders = BoardOfShareholders;\n" +
            "\n" +
            "        //список законов с голосами\n" +
            "        Map<HigherSpecialPositions, List<CurrentLawVotesEndBalance>> curentLawVotesEndBalance = new HashMap<>();\n" +
            "\n" +
            "        for (Map.Entry<HigherSpecialPositions, List<LawEligibleForParliamentaryApproval>> corp :positionsListMap.entrySet()) {\n" +
            "            //убрать повторяющиеся должности из списка.\n" +
            "                    .distinct().collect(Collectors.toList()));\n" +
            "\n" +
            "            //получить баланс и голоса для действующих законов\n" +
            "            curentLawVotesEndBalance.put(corp.getKey(),UtilsGovernment.filters(corp.getValue(), balances, BoardOfShareholders,\n" +
            "                    blockchain.getBlockchainList(), Seting.POSITION_YEAR_VOTE));\n" +
            "\n" +
            "            //отобрать голоса выше лимита\n" +
            "            curentLawVotesEndBalance.put(corp.getKey(), curentLawVotesEndBalance.get(corp.getKey())\n" +
            "                    .stream().filter(t-> t.getVotes() >= Seting.ORIGINAL_LIMIT_MIN_VOTE)\n" +
            "                    .collect(Collectors.toList()));\n" +
            "\n" +
            "            //отобрать то количество которое соответсвтвует данной должности\n" +
            "            List<CurrentLawVotesEndBalance> temporary = curentLawVotesEndBalance.get(corp.getKey()).stream().filter(\n" +
            "                            t->!t.getPackageName().equals(corp.getKey()))\n" +
            "                    .sorted(Comparator.comparing(CurrentLawVotesEndBalance::getVotes).reversed())\n" +
            "                    .limit(corp.getKey().getCount()).collect(Collectors.toList());\n" +
            "\n" +
            "           curentLawVotesEndBalance.put(corp.getKey(), temporary);\n" +
            "        }\n" +
            "\n" +
            "\n" +
            "\n" +
            "        model.addAttribute(\"show\", curentLawVotesEndBalance);\n" +
            "\n" +
            "        model.addAttribute(\"title\", \"current guidance\");\n" +
            "\n" +
            "        return \"/governments\";";

    String CHAPTER_11 = "Для голосования за любой закон созданный через механизм данной криптовалюты," +
            " достаточно в качестве получателя поставить адресс закона и в качестве голоса " +
            "отправить VoteEnum YES или NO как только ваш голос попадет голос отправителя будет равен количеству digitalStockBalance на данный " +
            "момент, если отправитель член Совета Акционеров то голос будет равен количетву цифровой репутации на данный момент умноженный на " +
            " 1.10, что даст на 10% больше голоса. Голоса за закон перерасчитываются каждый блок " +
            "Алгоритм подсчета голосования:" +
            "" +
            "class LawController: " +
            " public String currentLaw(Model model) throws IOException, NoSuchAlgorithmException, InvalidKeySpecException, SignatureException, NoSuchProviderException, InvalidKeyException {\n" +
            "\n" +
            "        Blockchain  blockchain = Mining.getBlockchain(\n" +
            "                Seting.ORIGINAL_BLOCKCHAIN_FILE,\n" +
            "                BlockchainFactoryEnum.ORIGINAL);\n" +
            "\n" +
            "        Map<String, Account> balances = new HashMap<>();\n" +
            "        //считывать баланс\n" +
            "        balances = SaveBalances.readLineObject(Seting.ORIGINAL_BALANCE_FILE);\n" +
            "\n" +
            "        List<LawEligibleForParliamentaryApproval> lawEligibleForParliamentaryApprovals =\n" +
            "                UtilsLaws.readLineCurrentLaws(Seting.ORIGINAL_ALL_CORPORATION_LAWS_WITH_BALANCE_FILE);\n" +
            "\n" +
            "\n" +
            "        List<Account> boardOfShareholders = UtilsGovernment.findBoardOfShareholders(balances, blockchain.getBlockchainList(), Seting.BOARDS_BLOCK);\n" +
            "\n" +
            "\n" +
            "\n" +
            "        //данные для отображения\n" +
            "        List<CurrentLawVotesEndBalance> current = UtilsGovernment.filters(lawEligibleForParliamentaryApprovals, balances, boardOfShareholders,\n" +
            "                blockchain.getBlockchainList(), Seting.LAW_YEAR_VOTE);\n" +
            "//        Seting.ORIGINAL_LIMIT_MIN_VOTE\n" +
            "        //минимальное значение количество положительных голосов для того чтобы закон действовал,\n" +
            "//        int ORIGINAL_LIMIT_MIN_VOTE = (int) (200 * Seting.COUNT_BLOCK_IN_DAY * 45); count_block_in_day = 144\n" +
            "        current = current.stream().filter(t-> t.getVotes() >= Seting.ORIGINAL_LIMIT_MIN_VOTE)\n" +
            "                .sorted(Comparator.comparing(CurrentLawVotesEndBalance::getVotes).reversed()).collect(Collectors.toList());\n" +
            "\n" +
            "        model.addAttribute(\"title\", \"current law: current laws are laws that have more than this: \" + Seting.ORIGINAL_LIMIT_MIN_VOTE + \" the number of votes.\");\n" +
            "        model.addAttribute(\"currentLaw\", current);\n" +
            "        return \"current-laws\";\n" +
            "    }" +
            "\n" +
            "\n" +
            "        //данные для отображения. Здесь определяются действующие законы\n" +
            "        List<CurrentLawVotesEndBalance> current = UtilsGovernment.filters(lawEligibleForParliamentaryApprovals, balances, boardOfShareholders);\n" +
            "//        Seting.ORIGINAL_LIMIT_MIN_VOTE\n" +
            "        //минимальное значение количество положительных голосов для того чтобы закон действовал,\n" +
            "//        int ORIGINAL_LIMIT_MIN_VOTE = (int) (200 * Seting.COUNT_BLOCK_IN_DAY * 45); count_block_in_day = 144\n" +
            "        current = current.stream().filter(t-> t.getVotes() >= Seting.ORIGINAL_LIMIT_MIN_VOTE)\n" +
            "                .sorted(Comparator.comparing(CurrentLawVotesEndBalance::getVotes).reversed()).collect(Collectors.toList());\n" +
            "\n" +
            "        model.addAttribute(\"title\", \"current law: current laws are laws that have more than this: \" + Seting.ORIGINAL_LIMIT_MIN_VOTE + \" the number of votes.\");\n" +
            "        model.addAttribute(\"currentLaw\", current);\n" +
            "        return \"current-laws\";\n" +
            "    }" +
            "" +
            "Class UtilsGovernment:" +
            "  public static List<CurrentLawVotesEndBalance> filters(List<LawEligibleForParliamentaryApproval> approvalList, Map<String, Account> balances, List<Account> BoardOfShareholders, List<Block> blocks, int limitBlocks) throws IOException, NoSuchAlgorithmException, InvalidKeySpecException, SignatureException, NoSuchProviderException, InvalidKeyException {\n" +
            "        //действующие законы чьи голоса больше ORIGINAL_LIMIT_MIN_VOTE\n" +
            "        List<CurrentLawVotesEndBalance> current = new ArrayList<>();\n" +
            "        Map<String, CurrentLawVotes> votesMap = null;\n" +
            "        List<Account> accounts = balances.entrySet().stream().map(t->t.getValue()).collect(Collectors.toList());\n" +
            "        if(blocks.size() > limitBlocks){\n" +
            "            votesMap = UtilsCurrentLaw.calculateVotes(accounts,blocks.subList(blocks.size() - limitBlocks, blocks.size()));\n" +
            "        }else {\n" +
            "            votesMap = UtilsCurrentLaw.calculateVotes(accounts, blocks);\n" +
            "        }\n" +
            "\n" +
            "        for (LawEligibleForParliamentaryApproval lawEligibleForParliamentaryApproval : approvalList) {\n" +
            "            if(votesMap.containsKey(lawEligibleForParliamentaryApproval.getLaws().getHashLaw())){\n" +
            "                String address = lawEligibleForParliamentaryApproval.getLaws().getHashLaw();\n" +
            "                String packageName = lawEligibleForParliamentaryApproval.getLaws().getPacketLawName();\n" +
            "                double vote = votesMap.get(lawEligibleForParliamentaryApproval.getLaws().getHashLaw()).votes(balances, BoardOfShareholders);\n" +
            "\n" +
            "                CurrentLawVotesEndBalance currentLawVotesEndBalance = new CurrentLawVotesEndBalance(address, packageName, vote);\n" +
            "                current.add(currentLawVotesEndBalance);\n" +
            "\n" +
            "            }\n" +
            "        }\n" +
            "        return current;\n" +
            "    }" +
            "" +
            "class CurrentLawVotes: механизм голосования" +
            "public double votes(Map<String, Account> balances, List<Account> pubChumbers){\n" +
            "        double yes = 0.0;\n" +
            "        double no = 0.0;\n" +
            "        List<String> addressGovernment = pubChumbers.stream().map(t->t.getAccount()).collect(Collectors.toList());\n" +
            "        for (String s : YES) {\n" +
            "            if(addressGovernment.contains(s)){\n" +
            "                yes += balances.get(s).getDigitalStockBalance() * Seting.POWER_SHAREHOLDER;\n" +
            "            }else {\n" +
            "                yes += balances.get(s).getDigitalStockBalance();\n" +
            "            }\n" +
            "\n" +
            "        }\n" +
            "        for (String s : NO) {\n" +
            "            if(addressGovernment.contains(s)){\n" +
            "                no += balances.get(s).getDigitalStockBalance() * Seting.POWER_SHAREHOLDER;\n" +
            "            }else {\n" +
            "                no += balances.get(s).getDigitalStockBalance();\n" +
            "            }\n" +
            "\n" +
            "        }\n" +
            "\n" +
            "\n" +
            "        return yes - no;\n" +
            "    }";

    String CHAPTER_12 = "Любое физическое или юридическое лицо может заниматься майнингом, и все добытые с помощью майнинга " +
            "цифровые доллары и цифровые акции принадлежит добытчику, как и вознаграждение основателя принадлежит основателю." +
            "За один Блок Майнер получает 200 цифровых доллара и 200 цифровых репутации, вознаграждение основателя равно 2% с округлением" +
            "до целого числа.";

    String CHAPTER_13 = "Любые должности которые могут понадабиться Международному Торговому союзу включая отделы и другие структуры " +
            "должны быть утверждены законами Международного Торгового Союза, а также и их полномочия. " +
            "Любые полномочия переданые Совету Акционеров, Специальным Должностям или должностям созданными иными способами," +
            "действуют пока действует законы созданные через данную криптовалюту которые определяют данные полномочия";

    String CHAPTER_14 = " (Относиться только к специальным должностям и Совету акционеров)" +
            "Любое вознаграждение Специальных Должностей и Совета Ационеров должно определяться действующими законами." +
            "И определяться как они должны получать, но в силу того что данная валюта имеет ограниченное количество, то с бюджета " +
            "данной Корпорации вознаграждение должно быть не фиксированным а процентным. (Пример: Вместо зарплаты 30 монет, " +
            "определить какой процент занимает данная сумма из бюджета и выдавать именно процент с учетом инфляции и дефляции, на момент" +
            "выдачи. " +
            "пример номер два: Зарплата судьи на момент принятия на работу была 20 монет, но на тот момент это было 0.003% от дохода" +
            "данной корпорации, тогда ежемесячно он будет получать не 20 монет а 0.003% но этот процент .)" +
            "Данная защита сделана вот по какой причине, к примеру биткоин на заре своего становления был всего лишь несколько центов." +
            "но помере развития, стоимость росла, если не вести такую меру, то зарплата одного сотрудника может вырости в несколько " +
            "сот раз, что приведет к банкротству данной Корпорации." +
            "";
    String CHAPTER_15 = "Любая наличность или иные деньги которая выпускает Корпорация Международный Торговый Союз," +
            "должны быть сто процентно обеспечены цифровым долларом или цифровой акцией данной криптовалюты, по фиксированному курсу." +
            "Но курс должен коректироваться раз в десят лет с учетом инфлционых и дефляционых процесов, а также рыночной конюктуры." +
            "Кто имеет права выпускать деньги обеспеченные данной криптовалютой и коректировать" +
            "курс должны быть определены с помощью действующих законов" +
            "и созданны специальные должности.";



    //********************************************************************************************************************************************

    String CHAPTER_16 = " Корпорация Международный Торговый Союз имеет право устанавливать и собирать комисию, пошлины (при " +
            "условии не выше 20%);" +
            " Также источником дохода данной корпорации" +
            " может быть продажа своих товаров или услуг, а также иные источники дохода(к примеру продажа подписок, членских взносов и т.д.)" +
           " целью таких мер является выдача дивидентов, акционерам и инвесторам, финансирование расходов данной Корпорации," +
            "  В первую очередь " +
            " в инвестирование развития своей продукции и экосистемы, развитие инфраструктуры " +
            " данной Корпорции, содержание персонала, выплата долгов, возможно также содержание социальных и обществено значимых проектов," +
            " таких как доступная медицина, образование(на благо всего общего общества) и т.д. на територии Корпорации Международного Торгового Союза." +
            " Содействовать и развивать всеобщему благосостоянию на всей територии Корпорации Международного Торгового Союза - " +
            " проблемы которые не могут быть решенены на региональном или местном уровне, а также проблем которые не решаемы " +
            " частными мелкими инвестициями. Используя эффект масштаба, можно удешевить стоимость разработки и внедрения передовых технологий" +
            " а также социально значимых продукции и услуг на територии Корпорации Международного Торгового Союза, но любые меры" +
            "которая Корпорация Международного Торгового Союза решит реализовать, включая выше перечисленные, должны быть утверждены действующим" +
            "законом, или переданы действующими законами полномочием Совету Директоров или другим специальным высшим должностям" +
            "HigherSpecialPositions. "+
            ", все расходы данной Корпорации должны быть определены либо советом директоров или действующими законами или специальными" +
            " действующими должностями" +
            "которым через действующие законы переданы данные полномочия." +
            " " +
            " которым выданы данные полномочия действующими законами" +
            " Все цели Корпорации Международного Торгового Союза должны быть определены или через" +
            "  действующие законы или советом директоров или специальными должностными лицами, которым через действующие законы им" +
            "переданы данные полномочия. развитие инфраструры для" +
            " ведения торговли и предоставления услуг членам Корпорации Международного торгового Союза," +
            " а также возможно развитие общественных и социальных благ на територии, если это необходимо и определено как цели, как" +
            "описано выше или любые иные цели которые определены как описано выше в" +
            "Корпорации Междунардного Торгового Союза." +
            " (Пример общественных и социальных благ, производство и продажа жизнено необходимых лекарств по низской цене, или создание парков, общественного транспорта," +
            "обслуживание канализаций и т.д." +
            "\n" +
            "Занять деньги в кредит Корпорации Международного Торгового Союза;\n" +
            "\n" +
            "Регулировать торговлю с иностранными государствами и похожими корпорациями, и при условии, что это положение не " +
            "разрешает регулировать или запрещать какую-либо " +
            "некоммерческую деятельность или любую коммерческую деятельность, " +
            "которая ограничивается одной части територии Корпорации Международного " +
            "Торгового Союза, независимо от его последствия за пределами данной територии; но Корпорация Международного Торгового Союза" +
            " имеет право регулировать вредные выбросы между териториями входящими под контроль Корпорации" +
            "Международного Торгового Союза, независимо от их источника;\n" +
            "\n" +
            "Установить единые правила натурализации и единые законы о банкротстве на всей территории Корпорации Международного " +
            "Торгового Союза, при условии, что это не будет истолковано как санкционирование законодательства," +
            " запрещающего въезд на територию Корпорации Международного Торгового Союза любого лица," +
            " въезжающего по мирным, непреступным причинам, и кто не страдает заразной болезнью;\n" +
            "\n" +
            "Выпускать деньги и другую валюту сто процентно обеспеченную криптовалютой Корпорации Международного Торгового Союза," +
            " регулировать их стоимость и иностранную монету, при условии, что это не будет " +
            "истолковано как разрешение превращения какой-либо валюты в законное платежное средство; и установить эталон мер и весов;\n" +
            "\n" +
            "Предусмотреть наказание за подделку ценных бумаг и текущей монеты или валюты Корпорации Международного Торгового Союза;\n" +
            "\n" +
            "Учреждать почтовые отделения и почтовые дороги при условии," +
            " что это не будет истолковано как допускающее установление какой-либо почтовой монополии;\n" +
            "\n" +
            "Содействовать прогрессу науки и полезных искусств, предоставляя авторам и изобретателям на срок не более " +
            "28 лет исключительное право на их соответствующие произведения и открытия;\n" +
            "\n" +

            "Все действующие законы Действуют на територии принадлежащей Корпорации Международного Торгового Союза и на всех членов не зависимо от територий." +

            "Корпорация Международного Торгового Союза не должен возлагать на членов Корпорации Международного Торгового Союза" +
            " или его политическое подразделение какие-либо обязательства " +
            "или обязанности по осуществлению расходов, если такие расходы не будут " +
            "полностью возмещены Корпорацией Международного Торгового Союза; Конгресс также не должен ставить" +
            " какие-либо условия в отношении расходования или получения ассигнованных средств," +
            " требуя от членов Корпорации Международного Торгового Союза" +
            " или его политического подразделения принятия закона или постановления," +
            " ограничивающего свободы его граждан или иным образом воздействующего на какие-либо полномочия(Так как членами могут" +
            "быть также юридические лица, это позволяет защитать граждан иных компаний, корпорации, государств от таких действий.)," +
            " не входящие в компетенцию Корпорации Международного Торгового Союза. Если член откажется от ассигнованных средств " +
            "с условиями их расходования, сумма ассигнований, " +
            "пропорционально распределенная населением этого члена(Если это какая то компания, корпорация, или государство и т.д.)," +
            " выплачивается члену в виде единовременной субсидии," +
            " которая расходуется на общие цели ассигнований.";



    String CHAPTER_17 = " Привилегия судебного приказа о хабеас корпус не может быть приостановлена," +
            " за исключением случаев, когда в случаях  этого может потребовать общественная безопасность." +
            " Ни один законопроект об аресте или закон постфактум, будь то гражданский или уголовный, не может быть принят." +
            " Корпорация Международного Торгового Союза не должен издавать законов, устанавливающих или взимающих налоги с доходов," +
            " подарков или имущества, " +
            " прямых или подушных налогов или налогов на совокупное потребление или расходы; " +
            " но Корпорация Международного Торгового Союза имеет право взимать единую комисию на продажу товаров или " +
            " услуг если данная комисия " +
            " не выше дватцати процентов(20%).  " +
            " Любое введение или увеличение комисии, пошлины, сбора или акциза требует чтобы был создан закон который будет" +
            " действовать и в котором будет описано данное изменение." +

            " Никакое регулирование торговли или доходов не должно отдавать предпочтение" +
            " одним членам Корпорации Международного Торгового Союза, между другими.:" +
            " и суда или другие виды транспорта, направляющиеся в или из одного штата(Члены) или земель племен," +
            " не обязаны заходить в порты. , ясно, или платить пошлины в другом." +

            " Никакие деньги не могут быть взяты из казны, но вследствие ассигнований," +
            " сделанных по закону, все такие ассигнования истекают через два года;" +
            " и регулярный отчет и отчет о поступлениях и расходах всех Корпорации Международного Торгового Союза денег " +
            " должны время от времени публиковаться, и быть доступна Совету Акционеров.(Данная мера нужна чтобы привлечь больше людей в данную корпорацию," +
            " и сделать прозрачным действия руководства.)" +


            "Корпорация Международного Торгового Союза также не может издавать никаких законов, которые не применяются" +
            " к нему самому или к его собственным членам.";

    String CHAPTER_18 = " Все счета подвержены отрицательной ставке. Отрицательная ставка для цифрового доллара составляет 0.10%" +
            " каждые пол года, а отрицательная ставка для цифровых акций составляет 0.2% каждые пол года. " +
            " Данная часть кода указана в class UtilsBalance calculateBalance:" +
            "   if (i != 0 && i / Seting.COUNT_BLOCK_IN_DAY % (Seting.YEAR / Seting.HALF_YEAR) == 0.0) {\n" +
            "\n" +
            "            for (Map.Entry<String, Account> changeBalance : balances.entrySet()) {\n" +
            "                Account change = changeBalance.getValue();\n" +
            "                change.setDigitalStockBalance(change.getDigitalStockBalance() - UtilsUse.countPercents(change.getDigitalStockBalance(), digitalReputationPercent));\n" +
            "                change.setDigitalDollarBalance(change.getDigitalDollarBalance() - UtilsUse.countPercents(change.getDigitalDollarBalance(), percent));\n" +
            "            }\n" +
            "        }" +
            "" +
            " Данная мера принята для избежания кризисов аналогичной Великой Депрессии, а также чтобы не эффективные и устаревшие" +
            " законы легко удалялись из системы и чтобы мотивировать акционеров получить поддержку общества, отрицательная ставка не дает " +
            "слишком высоко переоценивать стоимость как валюты," +
            " так стоимость акций, что не создает ситуций как в иных криптовалютах, где есть очень высокая валотильность." +
            " Данная мера не должна изменяться никакими поправками. (Обяснение: Когда цифровой доллар подвергается отрицательной ставке в размере 0.10% каждые пол года," +
            "это создает канал цены, где нижняя грацица монеты определяется себе себестоимостью и общим количеством в обороте, а верхняя граница" +
            "определяется реальной стоимостью, как только цена становиться выше реальной рыночной цены, участникам выгодней становиться быстро продать данную" +
            "валюту, и тем самым насытить рынок деньгами, это создает частые корекции рынка, что не дает созданию условий для больших обвалов." +
            "Но эффект будет заметен чем больше активных участников в сети, и чем дольше существует система.)";

    String CHAPTER_19 = "Любой закон может быть как отменен, так и возобновлен. Если закон удовлетворяет условию действующего" +
            "закона, он считается действующим, даже если не давно он был отменен, также если закон не удовлетворяет условия," +
            "он считается отмененым законом.";

    String CHAPTER_20 = "Настройки" +
            "// значение используется для вычисления процентов\n" +
            "    int HUNDRED_PERCENT = 100;\n" +
            "    // значение используется как константа года,\n" +
            "    // в данной системе отсутствует вискосный год\n" +
            "    int YEAR = 360;\n" +
            "\n" +
            "    //удаление отправленных транзакций\n" +
            "    String DELETED_SENDED_TRANSACTION_TIME = \"PT96H\";\n" +
            "\n" +
            "\n" +
            "    //за какой периуд последних блоков учитыать для отбора акционеров.\n" +
            "    //Актционрами могут быть только с наибольшим количеством баланса\n" +
            "    //отправители и майнеры.\n" +
            "    int BOARDS_BLOCK = (int) (Seting.COUNT_BLOCK_IN_DAY * YEAR);\n" +
            "\n" +
            "    //Множитель голоса для правительства для обчного счета одна акция один голос, для членов парламента одна репутация * 1.10\n" +
            "    double POWER_SHAREHOLDER = 1.10;\n" +
            "\n" +
            "    //минимальное значение количество положительных голосов для того чтобы закон действовал,\n" +
            "    int ORIGINAL_LIMIT_MIN_VOTE = (int) (200 * Seting.COUNT_BLOCK_IN_DAY * 45);\n" +
            "\n" +
            "    //    процент который получает основатель от добычи\n" +
            "    Double FOUNDERS_REWARD = 2.0;\n" +
            "    \n" +
            "    //address for send rewards\n" +
            "    String BASIS_ADDRESS = \"faErFrDnBhfSfNnj1hYjxydKNH28cRw1PBwDQEXH3QsJ\";\n" +
            "    String BASIS_PASSWORD = \"3hupFSQNWwiJuQNc68HiWzPgyNpQA2yy9iiwhytMS7rZyfPddNRwtvExeevhayzN6xL2YmTXN6NCA8jBhV9ge1w8KciHedGUMgZyq2T7rDdvekVNwEgf5pQrELv8VAEvQ4Kb5uviXJFuMyuD1kRAGExrZym5nppyibEVnTC9Uiw8YzUh2JmVT9iUajnVV3wJ5foMs\";\n" +
            "\n" +
            "    //сложность корекция каждые n блоков\n" +
            "    int DIFFICULTY_ADJUSTMENT_INTERVAL = (int) (Seting.COUNT_BLOCK_IN_DAY / 2);\n" +
            "    int DIFFICULTY_ADJUSTMENT_INTERVAL_TEST = 10;\n" +
            "\n" +
            "    long BLOCK_GENERATION_INTERVAL = Seting.BLOCK_TIME * 1000;// after Seting.BLOCK_TIME\n" +
            "    long BLOCK_GENERATION_INTERVAL_TEST = 0 * 1000;\n" +
            "\n" +
            "    long INTERVAL_TARGET = 600000;\n" +
            "    long INTERVAL_TARGET_TEST = 25000;\n" +
            "\n" +
            "    // плата за обслуживание каждые 6 месяцев 0.4 /HALF_YEAR = 0.1, 0.4/HALF_YEAR = 0.2\n" +
            "    Double ANNUAL_MAINTENANCE_FREE_DIGITAL_DOLLAR_YEAR = 0.2;\n" +
            "    //отрицательная ставка для цифровой акции\n" +
            "    double ANNUAL_MAINTENANCE_FREE_DIGITAL_STOCK_YEAR = 0.4;\n" +
            "    //каждые сколько месяцев снимать\n" +
            "    int HALF_YEAR = 2;\n" +
            "\n" +
            "    //стоимость создания закона\n" +
            "    double COST_LAW = 144;\n" +
            "    //с чего начинается адресс пакета закона\n" +
            "    //сокращенно корпорация\n" +
            "    String NAME_LAW_ADDRESS_START = \"LIBER\";\n" +
            "\n" +
            "    int HASH_COMPLEXITY_GENESIS = 1;\n" +
            "\n" +
            "    //совет акционеров\n" +
            "   int BOARD_OF_SHAREHOLDERS = 1000;\n" +
            "\n" +
            "\n" +
            "    //    адресс основателя: здесь будет мой адресс. Сейчас заглушка\n" +
            "    String ADDRESS_FOUNDER_TEST = \"stExZb8ifLfnFoq4JJuTifpAcscegATH8znhwW26zyTa\";\n" +
            "    String ADDRESS_FOUNDER = \"stExZb8ifLfnFoq4JJuTifpAcscegATH8znhwW26zyTa\";\n" +
            "\n" +
            "    String CORPORATE_CHARTER = International_Trade_Union.CorporateCharter.CorporateCharter.getAllConstitution() + \"\\n\" + CorporateCharter.getAllConstitution() + AboutUsDraft.getAboutUs()\n" +
            "            + AboutUsEngDraft.getAboutUs();\n" +
            "\n" +
            "    //начальная сумма основателя\n" +
            "    Double FOUNDERS_REMUNERATION_DIGITAL_DOLLAR = 30000000.0;\n" +
            "    double FOUNDERS_REMNUNERATION_DIGITAL_STOCK = 30000000.0;\n" +
            "    \n" +
            "\n" +
            "    // сколько секунд в сутках\n" +
            "    int DAY_SECOND = 86400;\n" +
            "\n" +
            "    //    за сколько секунд добывается каждый блок\n" +
            "    int BLOCK_TIME = 150;\n" +
            "\n" +
            "\n" +
            "    //сколько блоков добывается в сутки\n" +
            "    double COUNT_BLOCK_IN_DAY = (DAY_SECOND / BLOCK_TIME);\n" +
            "\n" +
            "    //подсчет голосов для должности в годах\n" +
            "    int POSITION_YEAR_VOTE = (int) Seting.COUNT_BLOCK_IN_DAY * YEAR * 3;\n" +
            "    //подсчет голосов для законов в годах\n" +
            "    int LAW_YEAR_VOTE = (int) Seting.COUNT_BLOCK_IN_DAY * YEAR * 3;\n" +
            "double DIGITAL_DOLLAR_REWARDS_BEFORE = 200.0;\n" +
            "    double DIGITAL_STOCK_REWARDS_BEFORE = 200.0;\n" +
            "    double DIGITAL_DOLLAR_FOUNDER_REWARDS_BEFORE = Math.round(UtilsUse.countPercents(Seting.DIGITAL_DOLLAR_REWARDS_BEFORE, Seting.FOUNDERS_REWARD));\n" +
            "    double DIGITAL_REPUTATION_FOUNDER_REWARDS_BEFORE = Math.round(UtilsUse.countPercents(Seting.DIGITAL_STOCK_REWARDS_BEFORE, Seting.FOUNDERS_REWARD));";







}
